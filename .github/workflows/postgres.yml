name: Postgres

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  postgres:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        postgres: [9.4.25, 10.11, 12.1]

#    services:
#      postgres:
#        image: postgres:${{ matrix.postgres }}
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: postgres
#        ports:
#        # will assign a random free host port
#        - 5432/tcp
#        # needed because the postgres container does not provide a healthcheck
#        options: >-
#          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#          -v /etc/postgres:/var/lib/postgresql/data

    steps:
    - uses: actions/checkout@v1

    - run: cd ./ci/ssl && ./gen-certs.sh

    # run postgres ourselves after checkout so we have the pregenerated keys
    - run: >-
        docker run --name postgres
        --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        -p 5432:5432
        -v ${{ env.GITHUB_WORKSPACE }}/sqlx/ci/ssl/server.crt:/etc/postgres/server.crt:ro
        -v ${{ env.GITHUB_WORKSPACE }}/sqlx/ci/ssl/server.key:/etc/postgres/server.key:ro
        postgres:${{ matrix.postgres }}
        -c ssl=on
        -c ssl_cert_file=/etc/postgres/server.crt
        -c ssl_key_file=/etc/postgres/server.key
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres

    # Rust ------------------------------------------------

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      if: steps.cache_rust.outputs.cache-hit != 'true'
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Cache target/
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-postgres-${{ hashFiles('**/Cargo.lock') }}

    # -----------------------------------------------------

    - run: docker logs ${{ job.services.postgres.id }}

    - run: cargo test -p sqlx --no-default-features --features 'postgres macros uuid chrono tls'
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres?sslmode=require

    # Rust ------------------------------------------------

    - name: Prepare build directory for cache
      run: >-
        find ./target/debug -maxdepth 1 -type f -delete
        && rm -fr ./target/debug/{deps,.fingerprint}/*sqlx*
        && rm -f  ./target/.rustc_info.json

    # -----------------------------------------------------
